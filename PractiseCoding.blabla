#include <system_error>
#include <iostream>   

class stack
{
		int currentSize             =  1000, 
		    lastFilledIndx          =  0;
		int ThisStack[currentSize]  =  {};

	public:
		stack();
		int pop();
		void push(int);
};


stack::stack ()
{
	
}

int pop ()
{
	if (lastFilledIndx >= 0 )
	{
		return ThisStack[lastFilledIndx--];
	}
	else
	{
		return throwEx;
	}
	
}

int push (int bla)
{
	if (ThisStack[currentSize-1])
	{
		ThisStack[++lastFilledIndx] = bla;
	}
	else
	{
		int NewStack[2*currentSize] = {};

		for (int i = 0; i < currentSize; i++)
		{
			NewStack[i] = ThisStack[i];
		}

		NewStack[++lastFilledIndx]   =  bla;
		currentSize                  =  2*currentSize;

		ThisStack = NewStack;
	}
}


















std::stack MakeStack ()
{
	int ThisStack[100] = {};

	return [this object]; 
}


void popFunc ()
{
	return ThisStack[lastIndx];
}

void pushFunc ()
{
	if (ThisStack[lastIndx])
	{
		ThisStack[]
	}
	return ThisStack[lastIndx];
}defin